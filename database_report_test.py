# database_report_test.py

import unittest
import database_report
# import workSheet

class database_report_Tests(unittest.TestCase):

	def test_Build_class(self):
		database_report.Build()
		# To check all the list
		self.assertEqual(database_report.customers_list, [{'CustomerNumber': 'CustomerNumber', 'CustomerName': 'CustomerName', 'Address': 'Address', 'Phone': 'Phone', 'Contact': 'Contact'}, {'CustomerNumber': 2583, 'CustomerName': 'Dima', 'Address': 'Calgary, AB', 'Phone': '403-625-2536', 'Contact': 'Eva'}, {'CustomerNumber': 2590, 'CustomerName': 'Steven', 'Address': 'Calgary, AB', 'Phone': '403-256-3512', 'Contact': 'Shane'}, {'CustomerNumber': 2591, 'CustomerName': 'Alex', 'Address': 'Calgary, AB', 'Phone': '403-856-4569', 'Contact': 'Steven'}, {'CustomerNumber': 2592, 'CustomerName': 'Eva', 'Address': 'Calgary, AB', 'Phone': '403-789-6589', 'Contact': 'Jawad'}, {'CustomerNumber': 2593, 'CustomerName': 'Shane', 'Address': 'Calgary, AB', 'Phone': '403-856-6325', 'Contact': 'Lauren'}, {'CustomerNumber': 2594, 'CustomerName': 'Jawad', 'Address': 'GP, AB', 'Phone': '403-589-9821', 'Contact': 'Jill'}, {'CustomerNumber': 2595, 'CustomerName': 'Lauren', 'Address': 'Edmonton, AB', 'Phone': '403-782-4535', 'Contact': 'Cherel'}, {'CustomerNumber': 2596, 'CustomerName': 'Rama', 'Address': 'Calgary, AB', 'Phone': '403-253-1254', 'Contact': 'Mari Lou'}, {'CustomerNumber': 2597, 'CustomerName': 'Cherel', 'Address': 'Calgary, AB', 'Phone': '403-325-4587', 'Contact': 'Monica'}, {'CustomerNumber': 2598, 'CustomerName': 'Mari Lou', 'Address': 'GP, AB', 'Phone': '403-458-9873', 'Contact': 'Lis'}, {'CustomerNumber': 2599, 'CustomerName': 'Monica', 'Address': 'GP, AB', 'Phone': '403-487-9632', 'Contact': 'Kristita'}, {'CustomerNumber': 2600, 'CustomerName': 'Lis', 'Address': 'GP, AB', 'Phone': '403-582-2536', 'Contact': 'Brent'}, {'CustomerNumber': 2601, 'CustomerName': 'Kristita', 'Address': 'Calgary, AB', 'Phone': '403-256-4973', 'Contact': 'Latora'}, {'CustomerNumber': 2602, 'CustomerName': 'Brent', 'Address': 'Calgary, AB', 'Phone': '403-769-256', 'Contact': 'Rose'}, {'CustomerNumber': 2603, 'CustomerName': 'Latora', 'Address': 'GP, AB', 'Phone': '403-256-8936', 'Contact': 'Larry'}, {'CustomerNumber': 2605, 'CustomerName': 'Sneha', 'Address': 'GP, AB', 'Phone': '403-253-1275', 'Contact': 'Liz'}])
		self.assertEqual(database_report.invoices_list, [{'InvoiceNumber': 'InvoiceNumber', 'CustomerNumber': 'CustomerNumber', 'Date': 'Date'}, {'InvoiceNumber': 1, 'CustomerNumber': 2583, 'Date': '02-03-2019'}, {'InvoiceNumber': 2, 'CustomerNumber': 2583, 'Date': '15-03-2019'}, {'InvoiceNumber': 3, 'CustomerNumber': 2583, 'Date': '25-03-2019'}, {'InvoiceNumber': 4, 'CustomerNumber': 2583, 'Date': '28-03-2019'}, {'InvoiceNumber': 5, 'CustomerNumber': 2583, 'Date': '30-03-2019'}, {'InvoiceNumber': 6, 'CustomerNumber': 2590, 'Date': '10-03-2019'}, {'InvoiceNumber': 7, 'CustomerNumber': 2590, 'Date': '20-03-2019'}, {'InvoiceNumber': 8, 'CustomerNumber': 2590, 'Date': '22-03-2019'}, {'InvoiceNumber': 9, 'CustomerNumber': 2591, 'Date': '08-03-2019'}, {'InvoiceNumber': 10, 'CustomerNumber': 2591, 'Date': '16-03-2019'}, {'InvoiceNumber': 11, 'CustomerNumber': 2591, 'Date': '28-03-2019'}, {'InvoiceNumber': 12, 'CustomerNumber': 2592, 'Date': '03-03-2019'}, {'InvoiceNumber': 13, 'CustomerNumber': 2592, 'Date': '21-03-2019'}, {'InvoiceNumber': 14, 'CustomerNumber': 2593, 'Date': '09-03-2019'}, {'InvoiceNumber': 15, 'CustomerNumber': 2593, 'Date': '17-03-2019'}, {'InvoiceNumber': 16, 'CustomerNumber': 2594, 'Date': '26-03-2019'}, {'InvoiceNumber': 17, 'CustomerNumber': 2594, 'Date': '27-03-2019'}, {'InvoiceNumber': 18, 'CustomerNumber': 2595, 'Date': '28-03-2019'}, {'InvoiceNumber': 19, 'CustomerNumber': 2595, 'Date': '29-03-2019'}, {'InvoiceNumber': 20, 'CustomerNumber': 2596, 'Date': '29-03-2019'}, {'InvoiceNumber': 21, 'CustomerNumber': 2596, 'Date': '30-03-2019'}, {'InvoiceNumber': 22, 'CustomerNumber': 2597, 'Date': '06-03-2019'}, {'InvoiceNumber': 23, 'CustomerNumber': 2597, 'Date': '14-03-2019'}, {'InvoiceNumber': 24, 'CustomerNumber': 2598, 'Date': '17-03-2019'}, {'InvoiceNumber': 25, 'CustomerNumber': 2598, 'Date': '26-03-2019'}, {'InvoiceNumber': 26, 'CustomerNumber': 2598, 'Date': '28-03-2019'}, {'InvoiceNumber': 27, 'CustomerNumber': 2598, 'Date': '30-03-2019'}, {'InvoiceNumber': 28, 'CustomerNumber': 2599, 'Date': '01-03-2019'}, {'InvoiceNumber': 29, 'CustomerNumber': 2599, 'Date': '18-03-2019'}, {'InvoiceNumber': 30, 'CustomerNumber': 2600, 'Date': '09-03-2019'}, {'InvoiceNumber': 31, 'CustomerNumber': 2600, 'Date': '16-03-2019'}, {'InvoiceNumber': 32, 'CustomerNumber': 2601, 'Date': '18-03-2019'}, {'InvoiceNumber': 33, 'CustomerNumber': 2601, 'Date': '24-03-2019'}, {'InvoiceNumber': 34, 'CustomerNumber': 2602, 'Date': '26-03-2019'}, {'InvoiceNumber': 35, 'CustomerNumber': 2602, 'Date': '30-03-2019'}, {'InvoiceNumber': 36, 'CustomerNumber': 2603, 'Date': '03-03-2019'}, {'InvoiceNumber': 37, 'CustomerNumber': 2603, 'Date': '22-03-2019'}])
		self.assertEqual(database_report.lineItems_list, [{'InvoiceNumber': 'InvoiceNumber', 'ProductNumber': 'ProductNumber', 'Units': 'Units'}, {'InvoiceNumber': 1, 'ProductNumber': 1, 'Units': 3}, {'InvoiceNumber': 1, 'ProductNumber': 5, 'Units': 5}, {'InvoiceNumber': 2, 'ProductNumber': 7, 'Units': 5}, {'InvoiceNumber': 2, 'ProductNumber': 8, 'Units': 2}, {'InvoiceNumber': 3, 'ProductNumber': None, 'Units': 9}, {'InvoiceNumber': 4, 'ProductNumber': 2, 'Units': 5}, {'InvoiceNumber': 4, 'ProductNumber': 15, 'Units': 4}, {'InvoiceNumber': 5, 'ProductNumber': 11, 'Units': 5}, {'InvoiceNumber': 6, 'ProductNumber': 16, 'Units': 2}, {'InvoiceNumber': 7, 'ProductNumber': 8, 'Units': 5}, {'InvoiceNumber': 7, 'ProductNumber': 9, 'Units': 2}, {'InvoiceNumber': 8, 'ProductNumber': 4, 'Units': 1}, {'InvoiceNumber': 9, 'ProductNumber': 3, 'Units': 15}, {'InvoiceNumber': 9, 'ProductNumber': 14, 'Units': 2}, {'InvoiceNumber': 10, 'ProductNumber': 13, 'Units': 4}, {'InvoiceNumber': 10, 'ProductNumber': 14, 'Units': 2}, {'InvoiceNumber': 11, 'ProductNumber': 12, 'Units': 5}, {'InvoiceNumber': 12, 'ProductNumber': 9, 'Units': 1}, {'InvoiceNumber': 12, 'ProductNumber': 6, 'Units': 2}, {'InvoiceNumber': 13, 'ProductNumber': 3, 'Units': 8}, {'InvoiceNumber': 13, 'ProductNumber': 5, 'Units': 3}, {'InvoiceNumber': 14, 'ProductNumber': 8, 'Units': 4}, {'InvoiceNumber': 14, 'ProductNumber': 1, 'Units': 5}, {'InvoiceNumber': 15, 'ProductNumber': 15, 'Units': 3}, {'InvoiceNumber': 16, 'ProductNumber': 7, 'Units': 4}, {'InvoiceNumber': 16, 'ProductNumber': 9, 'Units': 8}, {'InvoiceNumber': 17, 'ProductNumber': 16, 'Units': 6}, {'InvoiceNumber': 18, 'ProductNumber': 2, 'Units': 9}, {'InvoiceNumber': 18, 'ProductNumber': 8, 'Units': 12}, {'InvoiceNumber': 19, 'ProductNumber': 6, 'Units': 5}, {'InvoiceNumber': 19, 'ProductNumber': 4, 'Units': 6}, {'InvoiceNumber': 20, 'ProductNumber': 2, 'Units': 7}, {'InvoiceNumber': 20, 'ProductNumber': 1, 'Units': 6}, {'InvoiceNumber': 21, 'ProductNumber': 7, 'Units': 2}, {'InvoiceNumber': 21, 'ProductNumber': 2, 'Units': 5}, {'InvoiceNumber': 22, 'ProductNumber': 7, 'Units': 9}, {'InvoiceNumber': 22, 'ProductNumber': 9, 'Units': 4}, {'InvoiceNumber': 23, 'ProductNumber': 3, 'Units': 5}, {'InvoiceNumber': 23, 'ProductNumber': 6, 'Units': 3}, {'InvoiceNumber': 24, 'ProductNumber': 4, 'Units': 4}, {'InvoiceNumber': 25, 'ProductNumber': 12, 'Units': 6}, {'InvoiceNumber': 25, 'ProductNumber': 13, 'Units': 78}, {'InvoiceNumber': 26, 'ProductNumber': 8, 'Units': 8}, {'InvoiceNumber': 26, 'ProductNumber': 14, 'Units': 2}, {'InvoiceNumber': 27, 'ProductNumber': 8, 'Units': 4}, {'InvoiceNumber': 28, 'ProductNumber': 5, 'Units': 3}, {'InvoiceNumber': 28, 'ProductNumber': 2, 'Units': 1}, {'InvoiceNumber': 29, 'ProductNumber': 3, 'Units': 8}, {'InvoiceNumber': 29, 'ProductNumber': 6, 'Units': 9}, {'InvoiceNumber': 30, 'ProductNumber': 7, 'Units': 4}, {'InvoiceNumber': 30, 'ProductNumber': 4, 'Units': 7}, {'InvoiceNumber': 31, 'ProductNumber': 2, 'Units': 6}, {'InvoiceNumber': 31, 'ProductNumber': 1, 'Units': 4}, {'InvoiceNumber': 32, 'ProductNumber': 9, 'Units': 2}, {'InvoiceNumber': 33, 'ProductNumber': 11, 'Units': 1}, {'InvoiceNumber': 33, 'ProductNumber': 10, 'Units': 3}, {'InvoiceNumber': 34, 'ProductNumber': 2, 'Units': 7}, {'InvoiceNumber': 35, 'ProductNumber': 5, 'Units': 7}, {'InvoiceNumber': 35, 'ProductNumber': 9, 'Units': 9}, {'InvoiceNumber': 36, 'ProductNumber': 16, 'Units': 5}, {'InvoiceNumber': 36, 'ProductNumber': 10, 'Units': 2}, {'InvoiceNumber': 37, 'ProductNumber': 9, 'Units': 3}])
		self.assertEqual(database_report.products_list, [{'ProductNumber': 'ProductNumber', 'ProductName': 'ProductName', 'UnitCost': 'UnitCost'}, {'ProductNumber': 1, 'ProductName': 'Banana', 'UnitCost': 2}, {'ProductNumber': 2, 'ProductName': 'Apple', 'UnitCost': 3}, {'ProductNumber': 3, 'ProductName': 'Orange', 'UnitCost': 1}, {'ProductNumber': 4, 'ProductName': 'Mango', 'UnitCost': 5}, {'ProductNumber': 5, 'ProductName': 'Pen', 'UnitCost': 4}, {'ProductNumber': 6, 'ProductName': 'Book', 'UnitCost': 10}, {'ProductNumber': 7, 'ProductName': 'Notebook', 'UnitCost': 7}, {'ProductNumber': 8, 'ProductName': 'Paper', 'UnitCost': 4}, {'ProductNumber': 9, 'ProductName': 'Glass', 'UnitCost': 5}, {'ProductNumber': 10, 'ProductName': 'Coffee', 'UnitCost': 8}, {'ProductNumber': 11, 'ProductName': 'Tea', 'UnitCost': 6}, {'ProductNumber': 12, 'ProductName': 'Bag', 'UnitCost': 55}, {'ProductNumber': 13, 'ProductName': 'Chair', 'UnitCost': 40}, {'ProductNumber': 14, 'ProductName': 'Table', 'UnitCost': 45}, {'ProductNumber': 15, 'ProductName': 'Color', 'UnitCost': 15}, {'ProductNumber': 16, 'ProductName': 'Dress', 'UnitCost': 150}])

		# To check only one line of the list
		self.assertEqual(database_report.customers_list[5], {'CustomerNumber': 2593, 'CustomerName': 'Shane', 'Address': 'Calgary, AB', 'Phone': '403-856-6325', 'Contact': 'Lauren'})
		self.assertEqual(database_report.invoices_list[5], {'InvoiceNumber': 5, 'CustomerNumber': 2583, 'Date': '30-03-2019'})
		self.assertEqual(database_report.lineItems_list[5], {'InvoiceNumber': 3, 'ProductNumber': None, 'Units': 9})
		self.assertEqual(database_report.products_list[5], {'ProductNumber': 5, 'ProductName': 'Pen', 'UnitCost': 4})
		
class database_create_invoice_test(unittest.TestCase):

	def test_create_invoice(self):
		database_report.Create_invoice.create_invoice(12)
		# self.assertEqual(database_report.create_invoice(12), "Done")

if __name__ == "__main__":
	unittest.main()